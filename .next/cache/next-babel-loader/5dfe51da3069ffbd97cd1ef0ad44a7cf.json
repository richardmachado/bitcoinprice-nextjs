{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lambda\\\\Next\\\\BITZPRICE\\\\components\\\\InfoBox.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport moment from 'moment';\nimport styles from './InfoBox.module.css';\n\nclass InfoBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPrice: null,\n      monthChangeD: null,\n      monthChangeP: null,\n      updatedAt: null\n    };\n  }\n\n  componentDidMount() {\n    this.getData = () => {\n      const {\n        data\n      } = this.props;\n      const url = 'https://api.coindesk.com/v1/bpi/currentprice.json';\n      fetch(url).then(r => r.json()).then(bitcoinData => {\n        const price = bitcoinData.bpi.USD.rate_float;\n        const change = price - data[0].y;\n        const changeP = (price - data[0].y) / data[0].y * 100;\n        this.setState({\n          currentPrice: bitcoinData.bpi.USD.rate_float,\n          monthChangeD: change.toLocaleString('us-EN', {\n            style: 'currency',\n            currency: 'USD'\n          }),\n          monthChangeP: changeP.toFixed(2) + '%',\n          updatedAt: bitcoinData.time.updated\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.getData();\n    this.refresh = setInterval(() => this.getData(), 90000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresh);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"data-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, this.state.currentPrice ? __jsx(\"div\", {\n      id: \"left\",\n      className: styles.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: styles.heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, this.state.currentPrice.toLocaleString('us-EN', {\n      style: 'currency',\n      currency: 'USD'\n    })), __jsx(\"div\", {\n      className: styles.subtext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, 'Updated ' + moment(this.state.updatedAt).fromNow())) : null, this.state.currentPrice ? __jsx(\"div\", {\n      id: \"middle\",\n      className: styles.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"styles.heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, this.state.monthChangeD), __jsx(\"div\", {\n      className: \"{styles.subtext}\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Change Since Last Month (USD)\")) : null, __jsx(\"div\", {\n      id: \"right\",\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, this.state.monthChangeP), __jsx(\"div\", {\n      className: \"subtext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Change Since Last Month (%)\")));\n  }\n\n}\n\nexport default InfoBox;","map":{"version":3,"sources":["D:/Lambda/Next/BITZPRICE/components/InfoBox.js"],"names":["moment","styles","InfoBox","React","Component","constructor","props","state","currentPrice","monthChangeD","monthChangeP","updatedAt","componentDidMount","getData","data","url","fetch","then","r","json","bitcoinData","price","bpi","USD","rate_float","change","y","changeP","setState","toLocaleString","style","currency","toFixed","time","updated","catch","e","console","log","refresh","setInterval","componentWillUnmount","clearInterval","render","box","heading","subtext","fromNow"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport styles from './InfoBox.module.css'\r\n\r\nclass InfoBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPrice: null,\r\n      monthChangeD: null,\r\n      monthChangeP: null,\r\n      updatedAt: null\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.getData = () => {\r\n      const {data} = this.props;\r\n      const url = 'https://api.coindesk.com/v1/bpi/currentprice.json';\r\n\r\n      fetch(url).then(r => r.json())\r\n        .then((bitcoinData) => {\r\n          const price = bitcoinData.bpi.USD.rate_float;\r\n          const change = price - data[0].y;\r\n          const changeP = (price - data[0].y) / data[0].y * 100;\r\n\r\n          this.setState({\r\n            currentPrice: bitcoinData.bpi.USD.rate_float,\r\n            monthChangeD: change.toLocaleString('us-EN',{ style: 'currency', currency: 'USD' }),\r\n            monthChangeP: changeP.toFixed(2) + '%',\r\n            updatedAt: bitcoinData.time.updated\r\n          })\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }\r\n    this.getData();\r\n    this.refresh = setInterval(() => this.getData(), 90000);\r\n  }\r\n  componentWillUnmount(){\r\n    clearInterval(this.refresh);\r\n  }\r\n  render(){\r\n    return (\r\n      <div id=\"data-container\">\r\n        { this.state.currentPrice ?\r\n          <div id=\"left\" className={styles.box}>\r\n            <div className={styles.heading}>{this.state.currentPrice.toLocaleString('us-EN',{ style: 'currency', currency: 'USD' })}</div>\r\n            <div className={styles.subtext}>{'Updated ' + moment(this.state.updatedAt ).fromNow()}</div>\r\n          </div>\r\n        : null}\r\n        { this.state.currentPrice ?\r\n          <div id=\"middle\" className={styles.box}>\r\n            <div className=\"styles.heading\">{this.state.monthChangeD}</div>\r\n            <div className=\"{styles.subtext}\">Change Since Last Month (USD)</div>\r\n          </div>\r\n        : null}\r\n          <div id=\"right\" className='box'>\r\n            <div className=\"heading\">{this.state.monthChangeP}</div>\r\n            <div className=\"subtext\">Change Since Last Month (%)</div>\r\n          </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoBox;"]},"metadata":{},"sourceType":"module"}