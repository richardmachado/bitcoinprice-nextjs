{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Lambda\\\\Next\\\\BITZPRICE\\\\components\\\\InfoBox.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport moment from 'moment';\nimport styles from './InfoBox.module.css';\n\nvar InfoBox = /*#__PURE__*/function (_React$Component) {\n  _inherits(InfoBox, _React$Component);\n\n  var _super = _createSuper(InfoBox);\n\n  function InfoBox(props) {\n    var _this;\n\n    _classCallCheck(this, InfoBox);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      currentPrice: null,\n      monthChangeD: null,\n      monthChangeP: null,\n      updatedAt: null\n    };\n    return _this;\n  }\n\n  _createClass(InfoBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getData = function () {\n        var data = _this2.props.data;\n        var url = 'https://api.coindesk.com/v1/bpi/currentprice.json';\n        fetch(url).then(function (r) {\n          return r.json();\n        }).then(function (bitcoinData) {\n          var price = bitcoinData.bpi.USD.rate_float;\n          var change = price - data[0].y;\n          var changeP = (price - data[0].y) / data[0].y * 100;\n\n          _this2.setState({\n            currentPrice: bitcoinData.bpi.USD.rate_float,\n            monthChangeD: change.toLocaleString('us-EN', {\n              style: 'currency',\n              currency: 'USD'\n            }),\n            monthChangeP: changeP.toFixed(2) + '%',\n            updatedAt: bitcoinData.time.updated\n          });\n        })[\"catch\"](function (e) {\n          console.log(e);\n        });\n      };\n\n      this.getData();\n      this.refresh = setInterval(function () {\n        return _this2.getData();\n      }, 90000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.refresh);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"data-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, this.state.currentPrice ? __jsx(\"div\", {\n        id: \"left\",\n        className: styles.box,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: styles.heading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, this.state.currentPrice.toLocaleString('us-EN', {\n        style: 'currency',\n        currency: 'USD'\n      })), __jsx(\"div\", {\n        className: \"styles.subtext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, 'Updated ' + moment(this.state.updatedAt).fromNow())) : null, this.state.currentPrice ? __jsx(\"div\", {\n        id: \"middle\",\n        className: \"box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, this.state.monthChangeD), __jsx(\"div\", {\n        className: \"subtext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, \"Change Since Last Month (USD)\")) : null, __jsx(\"div\", {\n        id: \"right\",\n        className: \"box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, this.state.monthChangeP), __jsx(\"div\", {\n        className: \"subtext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, \"Change Since Last Month (%)\")));\n    }\n  }]);\n\n  return InfoBox;\n}(React.Component);\n\nexport default InfoBox;","map":{"version":3,"sources":["D:/Lambda/Next/BITZPRICE/components/InfoBox.js"],"names":["moment","styles","InfoBox","props","state","currentPrice","monthChangeD","monthChangeP","updatedAt","getData","data","url","fetch","then","r","json","bitcoinData","price","bpi","USD","rate_float","change","y","changeP","setState","toLocaleString","style","currency","toFixed","time","updated","e","console","log","refresh","setInterval","clearInterval","box","heading","fromNow","React","Component"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport styles from './InfoBox.module.css'\r\n\r\nclass InfoBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPrice: null,\r\n      monthChangeD: null,\r\n      monthChangeP: null,\r\n      updatedAt: null\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.getData = () => {\r\n      const {data} = this.props;\r\n      const url = 'https://api.coindesk.com/v1/bpi/currentprice.json';\r\n\r\n      fetch(url).then(r => r.json())\r\n        .then((bitcoinData) => {\r\n          const price = bitcoinData.bpi.USD.rate_float;\r\n          const change = price - data[0].y;\r\n          const changeP = (price - data[0].y) / data[0].y * 100;\r\n\r\n          this.setState({\r\n            currentPrice: bitcoinData.bpi.USD.rate_float,\r\n            monthChangeD: change.toLocaleString('us-EN',{ style: 'currency', currency: 'USD' }),\r\n            monthChangeP: changeP.toFixed(2) + '%',\r\n            updatedAt: bitcoinData.time.updated\r\n          })\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }\r\n    this.getData();\r\n    this.refresh = setInterval(() => this.getData(), 90000);\r\n  }\r\n  componentWillUnmount(){\r\n    clearInterval(this.refresh);\r\n  }\r\n  render(){\r\n    return (\r\n      <div id=\"data-container\">\r\n        { this.state.currentPrice ?\r\n          <div id=\"left\" className={styles.box}>\r\n            <div className={styles.heading}>{this.state.currentPrice.toLocaleString('us-EN',{ style: 'currency', currency: 'USD' })}</div>\r\n            <div className=\"styles.subtext\">{'Updated ' + moment(this.state.updatedAt ).fromNow()}</div>\r\n          </div>\r\n        : null}\r\n        { this.state.currentPrice ?\r\n          <div id=\"middle\" className='box'>\r\n            <div className=\"heading\">{this.state.monthChangeD}</div>\r\n            <div className=\"subtext\">Change Since Last Month (USD)</div>\r\n          </div>\r\n        : null}\r\n          <div id=\"right\" className='box'>\r\n            <div className=\"heading\">{this.state.monthChangeP}</div>\r\n            <div className=\"subtext\">Change Since Last Month (%)</div>\r\n          </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoBox;"]},"metadata":{},"sourceType":"module"}