{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lambda\\\\Next\\\\BITZPRICE\\\\components\\\\Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport moment from 'moment';\nimport './App.css';\nimport LineChart from './LineChart';\nimport ToolTip from './ToolTip';\nimport InfoBox from './InfoBox';\n\nclass Prices extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetchingData: true,\n      data: null,\n      hoverLoc: null,\n      activePoint: null\n    };\n  }\n\n  handleChartHover(hoverLoc, activePoint) {\n    this.setState({\n      hoverLoc: hoverLoc,\n      activePoint: activePoint\n    });\n  }\n\n  componentDidMount() {\n    const getData = () => {\n      const url = 'https://api.coindesk.com/v1/bpi/historical/close.json';\n      fetch(url).then(r => r.json()).then(bitcoinData => {\n        const sortedData = [];\n        let count = 0;\n\n        for (let date in bitcoinData.bpi) {\n          sortedData.push({\n            d: moment(date).format('MMM DD'),\n            p: bitcoinData.bpi[date].toLocaleString('us-EN', {\n              style: 'currency',\n              currency: 'USD'\n            }),\n            x: count,\n            //previous days\n            y: bitcoinData.bpi[date] // numerical price\n\n          });\n          count++;\n        }\n\n        this.setState({\n          data: sortedData,\n          fetchingData: false\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    getData();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, \"30 Day Bitcoin Price Chart\")), __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, !this.state.fetchingData ? __jsx(InfoBox, {\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }) : null), __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"popup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, this.state.hoverLoc ? __jsx(ToolTip, {\n      hoverLoc: this.state.hoverLoc,\n      activePoint: this.state.activePoint,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 40\n      }\n    }) : null)), __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, !this.state.fetchingData ? __jsx(LineChart, {\n      data: this.state.data,\n      onChartHover: (a, b) => this.handleChartHover(a, b),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }) : null)), __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      id: \"coindesk\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \" Powered by \", __jsx(\"a\", {\n      href: \"http://www.coindesk.com/price/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 46\n      }\n    }, \"CoinDesk\"))));\n  }\n\n}\n\nexport default Prices;","map":{"version":3,"sources":["D:/Lambda/Next/BITZPRICE/components/Prices.js"],"names":["moment","LineChart","ToolTip","InfoBox","Prices","React","Component","constructor","props","state","fetchingData","data","hoverLoc","activePoint","handleChartHover","setState","componentDidMount","getData","url","fetch","then","r","json","bitcoinData","sortedData","count","date","bpi","push","d","format","p","toLocaleString","style","currency","x","y","catch","e","console","log","render","a","b"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport './App.css';\r\nimport LineChart from './LineChart';\r\nimport ToolTip from './ToolTip';\r\nimport InfoBox from './InfoBox';\r\n\r\nclass Prices extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          fetchingData: true,\r\n          data: null,\r\n          hoverLoc: null,\r\n          activePoint: null\r\n        }\r\n      }\r\n      handleChartHover(hoverLoc, activePoint){\r\n        this.setState({\r\n          hoverLoc: hoverLoc,\r\n          activePoint: activePoint\r\n        })\r\n      }\r\n      componentDidMount(){\r\n        const getData = () => {\r\n          const url = 'https://api.coindesk.com/v1/bpi/historical/close.json';\r\n    \r\n          fetch(url).then( r => r.json())\r\n            .then((bitcoinData) => {\r\n              const sortedData = [];\r\n              let count = 0;\r\n              for (let date in bitcoinData.bpi){\r\n                sortedData.push({\r\n                  d: moment(date).format('MMM DD'),\r\n                  p: bitcoinData.bpi[date].toLocaleString('us-EN',{ style: 'currency', currency: 'USD' }),\r\n                  x: count, //previous days\r\n                  y: bitcoinData.bpi[date] // numerical price\r\n                });\r\n                count++;\r\n              }\r\n              this.setState({\r\n                data: sortedData,\r\n                fetchingData: false\r\n              })\r\n            })\r\n            .catch((e) => {\r\n              console.log(e);\r\n            });\r\n        }\r\n        getData();\r\n      }\r\n      render() {\r\n        return (\r\n    \r\n          <div className='container'>\r\n            <div className='row'>\r\n              <h1>30 Day Bitcoin Price Chart</h1>\r\n            </div>\r\n            <div className='row'>\r\n              { !this.state.fetchingData ?\r\n              <InfoBox data={this.state.data} />\r\n              : null }\r\n            </div>\r\n            <div className='row'>\r\n              <div className='popup'>\r\n                {this.state.hoverLoc ? <ToolTip hoverLoc={this.state.hoverLoc} activePoint={this.state.activePoint}/> : null}\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div className='chart'>\r\n                { !this.state.fetchingData ?\r\n                  <LineChart data={this.state.data} onChartHover={ (a,b) => this.handleChartHover(a,b) }/>\r\n                  : null }\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div id=\"coindesk\"> Powered by <a href=\"http://www.coindesk.com/price/\">CoinDesk</a></div>\r\n            </div>\r\n          </div>\r\n    \r\n        );\r\n      }\r\n    }\r\n\r\nexport default Prices\r\n"]},"metadata":{},"sourceType":"module"}